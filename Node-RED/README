This directory contains 2 flows in JSON format that can be imported in Node-RED.
More information on how to import a flow: https://nodered.org/docs/user-guide/editor/workspace/import-export

These flows construct the dashboard website (see figure) and construct the CSV files of incoming data.

It is necessary to add the following modules to the palette:
- node-red-contrib-fs
- node-red-dashboard
- node-red-node-tail



The 'File Logger Flow' is only needed once per robotic flower field system.
-> change path to folder where CSV should be stored (nodes: 'filename generator', 'file-lister', 'init' and 'reset')


The 'Flower Flow' is needed for every separate robotic flower in the system
-> change topic so it contains the right device and app name!
-> update server security settings in downlink and uplink node for each flower
-> create dashboard website tabs (Battery, Alarms, Sleep time, Refill gap and Files) and groups for each flower
-> next, asign the following nodes per flower to the right tab and group, an example for flower 1:
    - Received: '[Alarms] Flower1' 
    - Received: '[Battery] Flower1' 
    - Chart:'[Battery] Flower1' 
    - Gauge: '[Battery] Flower1' 
    - Queue is full: '[Alarms] Flower1' 
    - Send during visit: '[Alarms] Flower1' 
    - Battery warning: '[Alarms] Flower1' 
    - Possible obstruction: '[Alarms] Flower1'
    - Refill gap: '[Refill gap] Flower1' 
    - Going to sleep at: '[Sleep time] Flower1'
    - Waking up at: '[Sleep time] Flower1' 


Screenshots of dashboard website
The user interface of the frontend application with the different tabs opened. 
For example, in the 'battery' tab an overview of all the robotic flowers in use can be seen with the time of the last update (last received message), 
the battery voltage, and a graph of the voltage decline in function of time. 
